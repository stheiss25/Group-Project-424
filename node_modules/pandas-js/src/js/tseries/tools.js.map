{"version":3,"sources":["../../es6/tseries/tools.js"],"names":[],"mappings":";;;;;;;AACA;;;;AAEA;;;;AAEA;;;;AAIO,IAAM,oCAAc,SAAd,WAAc,CAAC,GAAD,EAAS;AAClC,MAAI,4BAAJ,EAA2B;AACzB,WAAO,kBAAW,IAAI,MAAJ,CAAW,GAAX,CAAe;AAAA,aAAK,YAAY,CAAZ,CAAL;AAAA,KAAf,CAAX,EAAgD,IAAI,MAApD,CAAP;AACD,GAFD,MAEO,IAAI,+BAAJ,EAA8B;AACnC,WAAO,qBAAc,oBAAU,GAAV,CAAc,IAAI,OAAJ,CAAY,GAAZ,CAAgB;AAAA,aAAK,CAAC,CAAD,EAAI,YAAY,IAAI,GAAJ,CAAQ,CAAR,CAAZ,CAAJ,CAAL;AAAA,KAAhB,CAAd,CAAd,EACL,IAAI,MADC,CAAP;AAED,GAHM,MAGA,IAAI,eAAe,oBAAU,IAAzB,IAAiC,MAAM,OAAN,CAAc,GAAd,CAArC,EAAyD;AAC9D,WAAO,IAAI,GAAJ,CAAQ;AAAA,aAAK,YAAY,CAAZ,CAAL;AAAA,KAAR,CAAP;AACD,GAFM,MAEA,IAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AAClC,WAAO,IAAI,IAAJ,CAAS,GAAT,CAAP;AACD;AACD,QAAM,IAAI,KAAJ,CAAU,0CAAV,CAAN;AACD,CAZM","file":"tools.js","sourcesContent":["\nimport Immutable from 'immutable';\n\nimport { Series, DataFrame } from '../core/index';\n\n/**\n *\n * @param {Series|DataFrame|List|Array|string} arg\n */\nexport const to_datetime = (arg) => {\n  if (arg instanceof Series) {\n    return new Series(arg.values.map(v => to_datetime(v)), arg.kwargs);\n  } else if (arg instanceof DataFrame) {\n    return new DataFrame(Immutable.Map(arg.columns.map(c => [c, to_datetime(arg.get(c))])),\n      arg.kwargs);\n  } else if (arg instanceof Immutable.List || Array.isArray(arg)) {\n    return arg.map(v => to_datetime(v));\n  } else if (typeof arg === 'string') {\n    return new Date(arg);\n  }\n  throw new Error('Must be Series, DataFrame, List or Array');\n};\n"]}