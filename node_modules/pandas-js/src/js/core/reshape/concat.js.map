{"version":3,"sources":["../../../es6/core/reshape/concat.js"],"names":[],"mappings":";;;;;;AAUA;;;;AAEA;;;;AACA;;;;;;AAUA;;;;;;;;;;;;;;;;;AAiBA,IAAM,SAAS,SAAT,MAAS,CAAC,IAAD,EAA+E;AAAA,MAAhE,MAAgE,uEAA7C,EAAC,cAAc,KAAf,EAAsB,MAAM,CAA5B,EAA6C;;AAC5F,MAAK,MAAM,OAAN,CAAc,IAAd,KAAuB,KAAK,CAAL,6BAAxB,IACI,gBAAgB,oBAAU,IAA1B,IAAkC,KAAK,GAAL,CAAS,CAAT,6BAD1C,EAEE,OAAO,2BAAc,IAAd,EAAoB,EAAC,cAAc,OAAO,YAAtB,EAApB,CAAP,CAFF,KAGK,IAAK,MAAM,OAAN,CAAc,IAAd,KAAuB,KAAK,CAAL,4BAAxB,IACH,gBAAgB,oBAAU,IAA1B,IAAkC,KAAK,GAAL,CAAS,CAAT,4BADnC,EAEH,OAAO,6BAAiB,IAAjB,EAAuB,EAAC,cAAc,OAAO,YAAtB,EAAoC,MAAM,OAAO,IAAjD,EAAvB,CAAP;AACF,QAAM,IAAI,KAAJ,CAAU,eAAV,CAAN;AACD,CARD,C,CAxCA;;;;;;;;;;kBAkDe,M","file":"concat.js","sourcesContent":["/** @flow\n * StratoDem Analytics : concat.js\n * Principal Author(s) : Michael Clawar\n * Secondary Author(s) :\n * Description :\n *\n *  (c) 2016- StratoDem Analytics, LLC\n *  All Rights Reserved\n */\n\nimport Immutable from 'immutable';\n\nimport DataFrame, { _concatDataFrame } from '../frame';\nimport Series, { _concatSeries } from '../series';\n\ntype T_CONCAT = DataFrame | Series;\ntype T_OBJS = Array<T_CONCAT> | Immutable.List<T_CONCAT>;\n\ntype T_KWARGS = {\n  ignore_index: boolean,\n  axis?: 0 | 1,\n}\n\n/**\n * Concatenate pandas objects along a particular axis.\n *\n * pandas equivalent: [pandas.concat](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.concat.html)\n *\n * @returns {Series | DataFrame}\n *\n * @example\n * const series1 = new Series([1, 2, 3, 4]);\n * const series2 = new Series([2, 3, 4, 5]);\n *\n * // Returns Series([1, 2, 3, 4, 2, 3, 4, 5], {index: [0, 1, 2, 3, 0, 1, 2, 3]})\n * concat([series1, series2], {ignore_index: false});\n *\n * // Returns Series([1, 2, 3, 4, 2, 3, 4, 5], {index: [0, 1, 2, 3, 4, 5, 6, 7]})\n * concat([series1, series2], {ignore_index: true});\n */\nconst concat = (objs: T_OBJS, kwargs: T_KWARGS = {ignore_index: false, axis: 0}): T_CONCAT => {\n  if ((Array.isArray(objs) && objs[0] instanceof Series)\n      || (objs instanceof Immutable.List && objs.get(0) instanceof Series))\n    return _concatSeries(objs, {ignore_index: kwargs.ignore_index});\n  else if ((Array.isArray(objs) && objs[0] instanceof DataFrame)\n    || (objs instanceof Immutable.List && objs.get(0) instanceof DataFrame))\n    return _concatDataFrame(objs, {ignore_index: kwargs.ignore_index, axis: kwargs.axis});\n  throw new Error('Not supported');\n};\n\nexport default concat;\n"]}